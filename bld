#!/usr/bin/env bash
source ini

# run "bld" to issue basic make command
function build {
	pushd $SOURCE
	if [[ $ARCH == arm64 ]] && [[ $CLANG ]]; then
		make -j$[$(nproc)-1] \
			ARCH=arm64 \
			CC="ccache clang" \
			CLANG_TRIPLE=$COMPILER \
			CROSS_COMPILE=$COMPILER \
			CROSS_COMPILE_ARM32=$COMPILER32
	else
		make -j$[$(nproc)-1] \
			CROSS_COMPILE=$COMPILER
	fi
	popd
}

# run bld make-confid to generate/regenerate config
function make-config {
	if [ ! -f $PWD/out/.config ]; then
		read -p "${GF}Enter *_defconfig: ${NC}" value
		if [ ! -f $SOURCE/arch/$ARCH/configs/$value ]; then
			echo "${RF}${BB}No $value found!${NC}"
		else
			pushd $SOURCE
			make $value
			popd
		fi
	else
		read -p "${GF}Edit config? (N/y): ${NC}" value
			case $value in
				y | Y)
					pushd $SOURCE
					make menuconfig
					popd
				;;
				*)
				;;
			esac
	fi
}

# run "bld make-clean" to clean out folder
function make-clean {
	pushd $SOURCE
	make clean
	popd
}

function make-dt {
	$TOOLS/xperia/./dtbtool --force-v2 \
	-o $DUMP/dt.img -s 2048 \
	-p $PWD/out/scripts/dtc/ $BOOT/
}

# run "bld make-zip" to compile flashable zip
function make-zip {
	read -p "${GF}${BB}Build zip? (N/y): ${NC}" value
		case $value in
			y | Y)
				read -p "ENTER RELEASE VERSION : " release
				export KBUILD_BUILD_VERSION="$release"
				build
				[[ $(ls $SOURCE | grep -c "Xperia") -eq 1 ]] && make-dt
				cp $IMAGE $DUMP/
				pushd $DUMP
				zip -r $OLDPWD/deft-$MODEL-$ANDROID-r$release *
				echo -e "${GB}${BB} Build r$release is ready to flash \a${NC}"
				popd
			;;
			*)
			;;
		esac
}

[[ ! -d "$DUMP" ]] && mkdir $DUMP

if [ $@ ]; then
	$@
else
	build
fi
