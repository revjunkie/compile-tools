#!/bin/bash

GR='\033[1;4;32m'
NC='\033[0m'
RD='\033[1;4;31m'
TOOLS=~/comp-tools
OUT=~/Downloads/Kernel/dump
TOOLCHAIN=~/toolchain/arm-eabi-4.9.3/bin
OUTSRC=~/Downloads/Kernel/s4-aosp

rm -f ~/Downloads/Kernel/s4-aosp/system/lib/modules/*
rm -f arch/arm/boot/zImage
rm -f $OUT/ramdisk-s4-aosp.cpio.lz4
echo -e "${GR}Cleanup Files${NC}"

read -p "ENTER RELEASE VERSION : " release
if [ -f $OUTSRC/i9505-lucid-aosp-b$release.zip ]; then
	rm -rf $OUTSRC/i9505-lucid-aosp-b$release.zip
fi
export KBUILD_BUILD_VERSION="$release"
make -j$(grep -c ^processor /proc/cpuinfo)

if [ -f arch/arm/boot/zImage ]; then
find -name '*.ko' -exec cp -av {} $OUTSRC/system/lib/modules \;
else 
	echo -e "${RD}ERROR: COMPILE ERROR${NC}"
	exit 0
fi

cd ~/Downloads/Kernel/s4-aosp/ramdisk

find . | cpio -H newc -o | $TOOLS/lz4demo -c0 stdin stdout > $OUT/ramdisk-s4-aosp.cpio.lz4

cd $TOOLS

if [ -f ~/s4-aosp/arch/arm/boot/zImage-dtb ]; then 
./dtbTool -o $OUT/dt.img -s 2048 -p ~/g2/scripts/dtc/ ~/g2/arch/arm/boot/
fi

if [ -f $OUT/ramdisk-s4-aosp.cpio.lz4 ]; then
./mkbootimg --kernel ~/s4-aosp/arch/arm/boot/zImage --ramdisk $OUT/ramdisk-s4-aosp.cpio.lz4 --cmdline "console=null androidboot.hardware=qcom user_debug=31 msm_rtb.filter=0x3F ehci-hcd.park=3" --base 0x80200000 --pagesize 2048 --offset 0x02000000 -o $OUTSRC/boot.img
echo -e "${GR}boot.img compiled${NC}"
else
	echo -e "${RD}ERROR: RAMDISK ERROR${NC}"
	exit 0
fi

#python2 open_bump.py -a ~/Downloads/g2/boot.img 

#mv ~/Downloads/g2/boot_bumped.img ~/Downloads/g2/boot.img
#echo -e "${gr}boot.img patched${nc}"

cd $OUTSRC

MODULES=/system/lib/modules/*ko
for f in $MODULES
do
$TOOLCHAIN/arm-eabi-strip --strip-unneeded ~/Downloads/Kernel/s4-aosp/$MODULES
done

zip -r i9505-lucid-aosp-b$release.zip META-INF system boot.img -x \*~ 
echo -e "${GR}Kernel Release $release is ready to flash${NC}"

